services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: laravel-app-prod
    restart: unless-stopped
    working_dir: /var/www
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    volumes:
      - ./storage:/var/www/storage
      - ./bootstrap/cache:/var/www/bootstrap/cache
    depends_on:
      - mysql
      - redis
    networks:
      - laravel-network

  nginx:
    image: nginx:alpine
    container_name: laravel-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/prod.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - laravel-network

  mysql:
    image: mysql:8.0
    container_name: laravel-mysql-prod
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - laravel-network

  redis:
    image: redis:7-alpine
    container_name: laravel-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - laravel-network

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: laravel-scheduler-prod
    restart: unless-stopped
    working_dir: /var/www
    entrypoint: ["php", "artisan", "schedule:work"]
    depends_on:
      - mysql
      - redis
    networks:
      - laravel-network

  queue:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: laravel-queue-prod
    restart: unless-stopped
    working_dir: /var/www
    entrypoint: ["php", "artisan", "queue:work", "--sleep=3", "--tries=3"]
    depends_on:
      - mysql
      - redis
    networks:
      - laravel-network

volumes:
  mysql_data:
  redis_data:

networks:
  laravel-network:
    driver: bridge 